swagger: '2.0'
info:
  title: EventsAPI
  contact:
    email: engineering@api.com
  version: '2022-07-29'
basePath: /
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Basic:
    type: basic
security:
  - Basic: []
paths:
  /api/{version}/events/:
    get:
      operationId: api_events_list
      description: ''
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
      responses:
        '200':
          description: ''
      tags:
        - api
    post:
      operationId: api_events_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - api
    parameters:
      - name: version
        in: path
        required: true
        type: string
  /api/{version}/events/{id}/:
    get:
      operationId: api_events_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - api
    put:
      operationId: api_events_update
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - api
    delete:
      operationId: api_events_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - api
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this event.
        required: true
        type: string
        format: uuid
      - name: version
        in: path
        required: true
        type: string
  /api/{version}/events/{id}/participants/:
    get:
      operationId: api_events_participants
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - api
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this event.
        required: true
        type: string
        format: uuid
      - name: version
        in: path
        required: true
        type: string
  /api/{version}/events/{id}/signup_for_event/:
    post:
      operationId: api_events_signup_for_event
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - api
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this event.
        required: true
        type: string
        format: uuid
      - name: version
        in: path
        required: true
        type: string
  /api/{version}/events/{id}/withdraw_from_event/:
    delete:
      operationId: api_events_withdraw_from_event
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - api
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this event.
        required: true
        type: string
        format: uuid
      - name: version
        in: path
        required: true
        type: string
  /api/{version}/login/:
    post:
      operationId: api_login_create
      description: |-
        Check the credentials and return the REST Token
        if the credentials are valid and authenticated.
        Calls Django Auth login method to register User ID
        in Django session framework

        Accept the following POST parameters: username, password
        Return the REST Framework Token Object's key.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Login'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Login'
      tags:
        - api
    parameters:
      - name: version
        in: path
        required: true
        type: string
  /api/{version}/logout/:
    get:
      operationId: api_logout_list
      summary: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.
      description: Accepts/Returns nothing.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - api
    post:
      operationId: api_logout_create
      summary: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.
      description: Accepts/Returns nothing.
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - api
    parameters:
      - name: version
        in: path
        required: true
        type: string
  /api/{version}/password/change/:
    post:
      operationId: api_password_change_create
      summary: Calls Django Auth SetPasswordForm save method.
      description: |-
        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PasswordChange'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/PasswordChange'
      tags:
        - api
    parameters:
      - name: version
        in: path
        required: true
        type: string
  /api/{version}/password/reset/:
    post:
      operationId: api_password_reset_create
      summary: Calls Django Auth PasswordResetForm save method.
      description: |-
        Accepts the following POST parameters: email
        Returns the success/fail message.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PasswordReset'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/PasswordReset'
      tags:
        - api
    parameters:
      - name: version
        in: path
        required: true
        type: string
  /api/{version}/password/reset/confirm/:
    post:
      operationId: api_password_reset_confirm_create
      summary: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.
      description: |-
        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PasswordResetConfirm'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/PasswordResetConfirm'
      tags:
        - api
    parameters:
      - name: version
        in: path
        required: true
        type: string
  /api/{version}/registration/:
    post:
      operationId: api_registration_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Register'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Register'
      tags:
        - api
    parameters:
      - name: version
        in: path
        required: true
        type: string
  /api/{version}/registration/resend-email/:
    post:
      operationId: api_registration_resend-email_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ResendEmailVerification'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/ResendEmailVerification'
      tags:
        - api
    parameters:
      - name: version
        in: path
        required: true
        type: string
  /api/{version}/registration/verify-email/:
    post:
      operationId: api_registration_verify-email_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/VerifyEmail'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/VerifyEmail'
      tags:
        - api
    parameters:
      - name: version
        in: path
        required: true
        type: string
  /api/{version}/user/:
    get:
      operationId: api_user_read
      summary: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.
      description: |-
        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserDetails'
      tags:
        - api
    put:
      operationId: api_user_update
      summary: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.
      description: |-
        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserDetails'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserDetails'
      tags:
        - api
    patch:
      operationId: api_user_partial_update
      summary: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.
      description: |-
        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserDetails'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserDetails'
      tags:
        - api
    parameters:
      - name: version
        in: path
        required: true
        type: string
definitions:
  Login:
    required:
      - password
    type: object
    properties:
      username:
        title: Username
        type: string
      email:
        title: Email
        type: string
        format: email
      password:
        title: Password
        type: string
        minLength: 1
  PasswordChange:
    required:
      - new_password1
      - new_password2
    type: object
    properties:
      new_password1:
        title: New password1
        type: string
        maxLength: 128
        minLength: 1
      new_password2:
        title: New password2
        type: string
        maxLength: 128
        minLength: 1
  PasswordReset:
    required:
      - email
    type: object
    properties:
      email:
        title: Email
        type: string
        format: email
        minLength: 1
  PasswordResetConfirm:
    required:
      - new_password1
      - new_password2
      - uid
      - token
    type: object
    properties:
      new_password1:
        title: New password1
        type: string
        maxLength: 128
        minLength: 1
      new_password2:
        title: New password2
        type: string
        maxLength: 128
        minLength: 1
      uid:
        title: Uid
        type: string
        minLength: 1
      token:
        title: Token
        type: string
        minLength: 1
  Register:
    required:
      - email
      - password1
      - password2
    type: object
    properties:
      username:
        title: Username
        type: string
        maxLength: 150
        minLength: 1
      email:
        title: Email
        type: string
        format: email
        minLength: 1
      password1:
        title: Password1
        type: string
        minLength: 1
      password2:
        title: Password2
        type: string
        minLength: 1
  ResendEmailVerification:
    required:
      - email
    type: object
    properties:
      email:
        title: Email
        type: string
        format: email
        minLength: 1
  VerifyEmail:
    required:
      - key
    type: object
    properties:
      key:
        title: Key
        type: string
        minLength: 1
  UserDetails:
    required:
      - username
    type: object
    properties:
      pk:
        title: ID
        type: integer
        readOnly: true
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      email:
        title: Email address
        type: string
        format: email
        readOnly: true
        minLength: 1
      first_name:
        title: First name
        type: string
        maxLength: 150
      last_name:
        title: Last name
        type: string
        maxLength: 150
