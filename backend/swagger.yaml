swagger: '2.0'
info:
  title: EventsAPI
  contact:
    email: engineering@api.com
  version: '2022-07-29'
basePath: /
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Basic:
    type: basic
security:
  - Basic: []
paths:
  /api/{version}/events/:
    get:
      operationId: getEvents
      description: Retrieves the list of events.
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
      responses:
        '200':
          description: Retrieves the list of events available.
          examples:
            application/json:
              count: 15
              next: /api/v1/events/?page=2&page_size=5
              previous: null
              results:
                - event_id: 16abba90-5aaa-498b-8f64-cdca71b623f2
                  title: Test Event 1
                  description: Test Event 1
                  date: '2024-12-12T00:00:00Z'
                  creator: 1
                  total_participants: 15
                  creator_username: user1
                  is_user_participant: true
                - event_id: 521f1466-36a7-46f8-b829-76f2b749154b
                  title: Test Event 2
                  description: Test Event 2 Description
                  date: '2024-02-02T00:00:00Z'
                  creator: 2
                  total_participants: 0
                  creator_username: user2
                  is_user_participant: true
      tags:
        - api
    post:
      operationId: createEvent
      description: Creates an event for a user.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            type: object
            properties:
              title:
                title: Title
                description: Event title.
                type: string
              description:
                title: Description
                description: Event description.
                type: string
              date:
                title: Date
                description: Event date.
                type: string
                format: date
                pattern: ^\d{4}-\d{1,2}-\d{1,2}$
      responses:
        '201':
          description: Returns `event_id` (UUID) of new event.
          examples:
            application/json:
              event_id: 1d5f8593-26eb-495c-b0bf-c1954558b33e
              title: Test Event 1
              description: Test Event 1 Description
              date: '2024-12-12T00:00:00Z'
              creator: 1
              total_participants: 0
              creator_username: user1
              is_user_participant: true
      tags:
        - api
    parameters:
      - name: version
        in: path
        required: true
        type: string
  /api/{version}/events/{id}/:
    get:
      operationId: api_events_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - api
    put:
      operationId: editEvents
      description: Edits an event.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            type: object
            properties:
              title:
                title: Title
                description: Event title.
                type: string
              description:
                title: Description
                description: Event description.
                type: string
              date:
                title: Date
                description: Event date.
                type: string
                format: date
                pattern: ^\d{4}-\d{1,2}-\d{1,2}$
      responses:
        '201':
          description: Returns an updated event.
          examples:
            application/json:
              event_id: 1d5f8593-26eb-495c-b0bf-c1954558b33e
              title: Test Event 1
              description: Test Event 1 Description
              date: '2024-12-12T00:00:00Z'
              creator: 1
              total_participants: 0
              creator_username: user1
              is_user_participant: true
      tags:
        - api
    delete:
      operationId: api_events_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - api
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this event.
        required: true
        type: string
        format: uuid
      - name: version
        in: path
        required: true
        type: string
  /api/{version}/events/{id}/participants/:
    get:
      operationId: getEventParticipants
      description: Retrieves the list of event participants.
      parameters: []
      responses:
        '200':
          description: Retrieves the list of event participants.
          examples:
            application/json:
              count: 15
              next: api/v1/events/16abba90-5aaa-498b-8f64-cdca71b623f2/participants/?page=2
              previous: null
              results:
                - user1
                - user2
                - user3
      tags:
        - api
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this event.
        required: true
        type: string
        format: uuid
      - name: version
        in: path
        required: true
        type: string
  /api/{version}/events/{id}/signup_for_event/:
    post:
      operationId: signupForEvent
      description: Adds user for an event.
      parameters: []
      responses:
        '201':
          description: Returns the event and participant IDs.
          examples:
            application/json:
              event: d53ad258-c730-4622-84af-684193a97653
              user: 2
      tags:
        - api
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this event.
        required: true
        type: string
        format: uuid
      - name: version
        in: path
        required: true
        type: string
  /api/{version}/events/{id}/withdraw_from_event/:
    delete:
      operationId: withdrawFromEvent
      description: Withdraws user for an event.
      parameters: []
      responses:
        '200':
          description: Withdraws user from an event.
          examples:
            application/json:
              detail: Deleted.
      tags:
        - api
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this event.
        required: true
        type: string
        format: uuid
      - name: version
        in: path
        required: true
        type: string
  /api/{version}/login/:
    post:
      operationId: api_login_create
      description: |-
        Check the credentials and return the REST Token
        if the credentials are valid and authenticated.
        Calls Django Auth login method to register User ID
        in Django session framework

        Accept the following POST parameters: username, password
        Return the REST Framework Token Object's key.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Login'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Login'
      tags:
        - api
    parameters:
      - name: version
        in: path
        required: true
        type: string
  /api/{version}/logout/:
    get:
      operationId: api_logout_list
      summary: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.
      description: Accepts/Returns nothing.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - api
    post:
      operationId: api_logout_create
      summary: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.
      description: Accepts/Returns nothing.
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - api
    parameters:
      - name: version
        in: path
        required: true
        type: string
  /api/{version}/password/change/:
    post:
      operationId: api_password_change_create
      summary: Calls Django Auth SetPasswordForm save method.
      description: |-
        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PasswordChange'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/PasswordChange'
      tags:
        - api
    parameters:
      - name: version
        in: path
        required: true
        type: string
  /api/{version}/password/reset/:
    post:
      operationId: api_password_reset_create
      summary: Calls Django Auth PasswordResetForm save method.
      description: |-
        Accepts the following POST parameters: email
        Returns the success/fail message.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PasswordReset'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/PasswordReset'
      tags:
        - api
    parameters:
      - name: version
        in: path
        required: true
        type: string
  /api/{version}/password/reset/confirm/:
    post:
      operationId: api_password_reset_confirm_create
      summary: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.
      description: |-
        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PasswordResetConfirm'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/PasswordResetConfirm'
      tags:
        - api
    parameters:
      - name: version
        in: path
        required: true
        type: string
  /api/{version}/registration/:
    post:
      operationId: api_registration_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Register'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Register'
      tags:
        - api
    parameters:
      - name: version
        in: path
        required: true
        type: string
  /api/{version}/registration/resend-email/:
    post:
      operationId: api_registration_resend-email_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ResendEmailVerification'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/ResendEmailVerification'
      tags:
        - api
    parameters:
      - name: version
        in: path
        required: true
        type: string
  /api/{version}/registration/verify-email/:
    post:
      operationId: api_registration_verify-email_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/VerifyEmail'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/VerifyEmail'
      tags:
        - api
    parameters:
      - name: version
        in: path
        required: true
        type: string
  /api/{version}/user/:
    get:
      operationId: api_user_read
      summary: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.
      description: |-
        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserDetails'
      tags:
        - api
    put:
      operationId: api_user_update
      summary: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.
      description: |-
        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserDetails'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserDetails'
      tags:
        - api
    patch:
      operationId: api_user_partial_update
      summary: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.
      description: |-
        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserDetails'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserDetails'
      tags:
        - api
    parameters:
      - name: version
        in: path
        required: true
        type: string
definitions:
  Login:
    required:
      - password
    type: object
    properties:
      username:
        title: Username
        type: string
      email:
        title: Email
        type: string
        format: email
      password:
        title: Password
        type: string
        minLength: 1
  PasswordChange:
    required:
      - new_password1
      - new_password2
    type: object
    properties:
      new_password1:
        title: New password1
        type: string
        maxLength: 128
        minLength: 1
      new_password2:
        title: New password2
        type: string
        maxLength: 128
        minLength: 1
  PasswordReset:
    required:
      - email
    type: object
    properties:
      email:
        title: Email
        type: string
        format: email
        minLength: 1
  PasswordResetConfirm:
    required:
      - new_password1
      - new_password2
      - uid
      - token
    type: object
    properties:
      new_password1:
        title: New password1
        type: string
        maxLength: 128
        minLength: 1
      new_password2:
        title: New password2
        type: string
        maxLength: 128
        minLength: 1
      uid:
        title: Uid
        type: string
        minLength: 1
      token:
        title: Token
        type: string
        minLength: 1
  Register:
    required:
      - email
      - password1
      - password2
    type: object
    properties:
      username:
        title: Username
        type: string
        maxLength: 150
        minLength: 1
      email:
        title: Email
        type: string
        format: email
        minLength: 1
      password1:
        title: Password1
        type: string
        minLength: 1
      password2:
        title: Password2
        type: string
        minLength: 1
  ResendEmailVerification:
    required:
      - email
    type: object
    properties:
      email:
        title: Email
        type: string
        format: email
        minLength: 1
  VerifyEmail:
    required:
      - key
    type: object
    properties:
      key:
        title: Key
        type: string
        minLength: 1
  UserDetails:
    required:
      - username
    type: object
    properties:
      pk:
        title: ID
        type: integer
        readOnly: true
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      email:
        title: Email address
        type: string
        format: email
        readOnly: true
        minLength: 1
      first_name:
        title: First name
        type: string
        maxLength: 150
      last_name:
        title: Last name
        type: string
        maxLength: 150
